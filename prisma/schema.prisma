generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_RETAILSTORE_URL")
}

model Users {
    userId                Int                     @id @default(autoincrement())
    firstName             String                  @db.VarChar(64)
    lastName              String                  @db.VarChar(64)
    email                 String                  @unique @db.VarChar(64)
    password              String?                 @db.VarChar(64)
    refreshToken          String?                 @db.VarChar(1024)
    createdAt             DateTime                @default(now())
    roleId                Int
    UserRoles             UserRoles               @relation(fields: [roleId], references: [roleId])
    InventoryProducts     InventoryProducts[]
    InventoryAllowedUsers InventoryAllowedUsers[]
    Inventories           Inventories[]

    @@index([userId])
    @@index([email])
}

model UserRoles {
    roleId   Int     @id
    roleName String  @db.VarChar(64)
    users    Users[]
}

model Products {
    productId         Int                 @id @default(autoincrement())
    productBarcode    String              @unique @db.VarChar(64)
    productName       String              @db.VarChar(64)
    productPrice      Float
    productDesc       String?             @db.VarChar(128)
    productImage      String?             @db.VarChar(128)
    InventoryProducts InventoryProducts[]

    @@index([productId])
    @@index([productName])
    @@index([productBarcode])
}

model Inventories {
    inventoryId           Int                     @id @default(autoincrement())
    inventoryDate         DateTime
    userId                Int
    User                  Users                   @relation(fields: [userId], references: [userId])
    storeId               Int
    Stores                Stores                  @relation(fields: [storeId], references: [storeId])
    archived              Boolean
    InventoryProducts     InventoryProducts[]
    InventoryAllowedUsers InventoryAllowedUsers[]

    @@index([inventoryId])
}

model InventoryAllowedUsers {
    inventoryAllowedUserId Int         @id @default(autoincrement())
    inventoryId            Int
    Inventories            Inventories @relation(fields: [inventoryId], references: [inventoryId])
    userId                 Int
    Users                  Users       @relation(fields: [userId], references: [userId])

    @@index([inventoryAllowedUserId, inventoryId, userId])
}

model InventoryProducts {
    inventoryProductId Int         @id @default(autoincrement())
    inventoryId        Int
    productId          Int
    userId             Int
    Users              Users       @relation(fields: [userId], references: [userId])
    Inventories        Inventories @relation(fields: [inventoryId], references: [inventoryId])
    Products           Products    @relation(fields: [productId], references: [productId])
    productQuantity    Float
    productPrice       Float

    @@index([inventoryProductId, inventoryId, productId])
}

model Stores {
    storeId      Int           @id @default(autoincrement())
    storeName    String        @db.VarChar(64)
    storeAddress String        @db.VarChar(128)
    Inventories  Inventories[]

    @@index([storeId])
    @@index([storeName])
    @@index([storeAddress])
}
