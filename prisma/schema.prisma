generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_RETAILSTORE_URL")
}

model Users {
    userId            Int                 @id @default(autoincrement())
    firstName         String              @db.VarChar(64)
    lastName          String              @db.VarChar(64)
    email             String              @unique @db.VarChar(64)
    password          String?             @db.VarChar(64)
    refreshToken      String?             @db.VarChar(1024)
    createdAt         DateTime            @default(now())
    roleId            Int
    deleted           Boolean             @default(false)
    deletedAt         DateTime?
    UserRoles         UserRoles           @relation(fields: [roleId], references: [roleId])
    InventoryProducts InventoryProducts[]
    Inventories       Inventories[]
    Stores            Stores[]
    Procurements      Procurements[]

    @@index([userId])
    @@index([email])
}

model UserRoles {
    roleId   Int     @id
    roleName String  @db.VarChar(64)
    users    Users[]
}

model Products {
    productId         Int                 @id @default(autoincrement())
    productBarcode    String              @unique @db.VarChar(64)
    productName       String              @db.VarChar(64)
    productUrl        String              @unique @db.VarChar(128)
    productPrice      Float
    productDesc       String?             @db.VarChar(128)
    productImage      String?             @db.VarChar(128)
    deleted           Boolean             @default(false)
    createdAt         DateTime            @default(now())
    deletedAt         DateTime?
    InventoryProducts InventoryProducts[]
    Procurements      Procurements[]
    Categories        Categories[]

    @@index([productId])
    @@index([productName])
    @@index([productBarcode])
}

model Inventories {
    inventoryId       Int                 @id @default(autoincrement())
    inventoryDate     DateTime
    creatorId         Int
    Creator           Users               @relation(fields: [creatorId], references: [userId])
    storeId           Int
    Stores            Stores              @relation(fields: [storeId], references: [storeId])
    archived          Boolean
    deleted           Boolean             @default(false)
    deletedAt         DateTime?
    InventoryProducts InventoryProducts[]

    @@index([inventoryId])
}

model InventoryProducts {
    inventoryProductId Int         @id @default(autoincrement())
    inventoryId        Int
    productId          Int
    userId             Int
    Users              Users       @relation(fields: [userId], references: [userId])
    Inventories        Inventories @relation(fields: [inventoryId], references: [inventoryId])
    Products           Products    @relation(fields: [productId], references: [productId])
    productQuantity    Float
    productPrice       Float

    @@index([inventoryProductId])
    @@index([productId])
    @@index([inventoryId])
}

model Stores {
    storeId      Int            @id @default(autoincrement())
    storeName    String         @db.VarChar(64)
    storeAddress String         @db.VarChar(128)
    deleted      Boolean        @default(false)
    deletedAt    DateTime?
    Inventories  Inventories[]
    Users        Users[]
    Procurements Procurements[]

    @@index([storeId])
    @@index([storeName])
}

model Procurements {
    procurementId   Int      @id @default(autoincrement())
    storeId         Int
    Stores          Stores   @relation(fields: [storeId], references: [storeId])
    productId       Int
    Products        Products @relation(fields: [productId], references: [productId])
    productQuantity Float
    userId          Int
    Users           Users    @relation(fields: [userId], references: [userId])
    completed       Boolean?
    createdAt       DateTime @default(now())

    @@index([procurementId])
}

model Categories {
    categoryId   Int        @id @default(autoincrement())
    categoryName String     @db.VarChar(256)
    categoryPath String     @unique @db.VarChar(256)
    Products     Products[]

    @@index([categoryId])
    @@index([categoryName])
    @@index([categoryPath])
}
